VERSION 0.7

LABEL:
    COMMAND
    LABEL maintainer="mritd <mritd@linux.com>"
    LABEL repository="https://github.com/mritd/autobuild"
    LABEL description="Earthly + CI Auto Build"
    LABEL licenses="Apache-2.0"

    LABEL org.opencontainers.image.authors="mritd <mritd@linux.com>"
    LABEL org.opencontainers.image.source="https://github.com/mritd/autobuild"
    LABEL org.opencontainers.image.description="Earthly + CI Auto Build"
    LABEL org.opencontainers.image.licenses="Apache-2.0"

BUILD_DATE:
    COMMAND
    FROM mritd/alpine

    ARG BUILD_DATE=$(date "+%Y%m%d%H%M%S")

OS_ARCH:
    COMMAND
    FROM mritd/osarch

    ARG OS_ARCH=$(osarch)

GO_TASK:
    COMMAND
    RUN sh -c "$(curl -sSL https://taskfile.dev/install.sh)" -- -b /usr/local/bin

TINI:
    COMMAND
    RUN set -ex \
        && export OS_ARCH=$(curl -fsSL https://raw.githubusercontent.com/mritd/autobuild/main/osarch/osarch.sh | bash) \
        && export TINI_DOWNLOAD_ADDR=$(curl -fsSL https://api.github.com/repos/krallin/tini/releases | \
            jq -r ".[0].assets[].browser_download_url | select (. | test(\"tini-static-${OS_ARCH}$\"))") \
        && curl -fsSL ${TINI_DOWNLOAD_ADDR} > /usr/bin/tini \
        && chmod +x /usr/bin/tini

GITHUB_CLI:
    COMMAND
    RUN set -ex \
        && export OS_ARCH=$(curl -fsSL https://raw.githubusercontent.com/mritd/autobuild/main/osarch/osarch.sh | bash) \
        && export GITHUB_CLI_DOWNLOAD_ADDR=$(curl -fsSL https://api.github.com/repos/cli/cli/releases | \
            jq -r ".[0].assets[].browser_download_url | select (. | test(\"linux_${OS_ARCH}.tar.gz\"))") \
        && curl -fsSL ${GITHUB_CLI_DOWNLOAD_ADDR} > /tmp/gh.tar.gz \
        && tar --strip-components=1 -zxf /tmp/gh.tar.gz -C /tmp \
        && mv /tmp/bin/gh /usr/local/bin/gh \
        && rm -rf /tmp/*

UPYUN_UPX:
    COMMAND
    RUN set -ex \
        && export UPX_ARCH=$(echo "$(uname -m)" | grep -q "x86_64" && echo "x86_64" || echo "arm64") \
        && export UPX_DOWNLOAD_ADDR=$(curl -fsSL https://api.github.com/repos/upyun/upx/releases | \
            jq -r ".[0].assets[].browser_download_url | select (. | test(\"Linux_${UPX_ARCH}\"))") \
        && curl -fsSL ${UPX_DOWNLOAD_ADDR} > /tmp/upx.tar.gz \
        && tar -zxf /tmp/upx.tar.gz -C /tmp \
        && mv /tmp/upx /usr/local/bin \
        && rm -rf /tmp/*

PREZTO:
    COMMAND
    ENV PREZTO_INIT_SCRIPT https://github.com/mritd/scripts/releases/download/v1.0.0/prezto.sh
    RUN curl -fsSL ${PREZTO_INIT_SCRIPT} > /tmp/prezto.sh \
        && bash /tmp/prezto.sh \
        && rm -f /tmp/prezto.sh

VIM:
    COMMAND
    ENV VIM_INIT_SCRIPT https://github.com/mritd/scripts/releases/download/v1.0.0/vim.sh
    RUN curl -fsSL ${VIM_INIT_SCRIPT} > /tmp/vim.sh \
        && bash /tmp/vim.sh \
        && rm -f /tmp/vim.sh

TMUX:
    COMMAND
    ENV TMUX_INIT_SCRIPT https://github.com/mritd/scripts/releases/download/v1.0.0/tmux.sh
    RUN curl -fsSL ${TMUX_INIT_SCRIPT} > /tmp/tmux.sh \
        && bash /tmp/tmux.sh \
        && rm -f /tmp/tmux.sh

